services:
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    user: 1000:1000
    # ports:
    #   - "9090:9090"  # Port not exposed externally - accessed via Traefik
    environment:
      - PROMETHEUS_CONFIG_FILE=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus_data:/prometheus:z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`${DOMAIN}`) && PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.middlewares=prometheus-auth"
      - "traefik.http.middlewares.prometheus-auth.basicauth.users=${METRICS_AUTH_HASH}"

  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    restart: unless-stopped
    user: 1000:1000
    # ports:
    #   - "3000:3000"  # Port not exposed externally - accessed via Traefik
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=$${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_ROOT_URL=https://$${DOMAIN}/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./grafana_data:/var/lib/grafana:z
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${DOMAIN}`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.middlewares=grafana-auth,grafana-headers"
      - "traefik.http.middlewares.grafana-auth.basicauth.users=${GRAFANA_AUTH_HASH}"
      - "traefik.http.middlewares.grafana-headers.headers.customrequestheaders.X-Forwarded-Prefix=/grafana"
      - "traefik.http.middlewares.grafana-headers.headers.customrequestheaders.X-Forwarded-Proto=https"

  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    restart: unless-stopped
    # ports:
    #   - "9100:9100"  # Port not exposed externally - accessed via Traefik
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-exporter.rule=Host(`${DOMAIN}`) && PathPrefix(`/node-exporter`)"
      - "traefik.http.routers.node-exporter.entrypoints=websecure"
      - "traefik.http.routers.node-exporter.tls.certresolver=letsencrypt"
      - "traefik.http.services.node-exporter.loadbalancer.server.port=9100"
      - "traefik.http.routers.node-exporter.middlewares=node-exporter-auth"
      - "traefik.http.middlewares.node-exporter-auth.basicauth.users=${METRICS_AUTH_HASH}"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    restart: unless-stopped
    # ports:
    #   - "8081:8080"  # Port not exposed externally - accessed via Traefik
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`${DOMAIN}`) && PathPrefix(`/cadvisor`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls.certresolver=letsencrypt"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "traefik.http.routers.cadvisor.middlewares=cadvisor-auth"
      - "traefik.http.middlewares.cadvisor-auth.basicauth.users=${METRICS_AUTH_HASH}"

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    restart: unless-stopped
    user: 1000:1000
    # ports:
    #   - "9093:9093"  # Port not exposed externally - accessed via Traefik
    env_file:
      - .env
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./alertmanager_data:/alertmanager:z
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://${DOMAIN}/alertmanager/'
      - '--web.route-prefix=/'
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`${DOMAIN}`) && PathPrefix(`/alertmanager`)"
      - "traefik.http.routers.alertmanager.entrypoints=websecure"
      - "traefik.http.routers.alertmanager.tls.certresolver=letsencrypt"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.http.routers.alertmanager.middlewares=alertmanager-auth"
      - "traefik.http.middlewares.alertmanager-auth.basicauth.users=${METRICS_AUTH_HASH}"

networks:
  traefik:
    external: true
  monitoring:
    driver: bridge
    name: monitoring

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
